services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__MariaDB=Server=db;Port=${MARIADB_PORT};Database=Korotko;User=root;Password=${MARIADB_ROOT_PASSWORD}
      - ConnectionStrings__Redis=cache:${REDIS_PORT},password=${REDIS_PASSWORD}
      - Website__URL=${WEBSITE_URL}
      - IDs__Alphabet=${ID_ALPHABET}
      - IDs__MinLength=${ID_MIN_LENGTH}
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started

  db:
    image: mariadb:latest
    ports:
      - "${MARIADB_PORT}:3306"
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 15s
      retries: 3
      start_period: 40s      

  cache:
    image: redis:latest
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      retries: 3
      start_period: 15s

  web:
    build:
      context: Korotko.Web/
      dockerfile: Dockerfile
      args:
        - API_SERVER_URL=${API_SERVER_URL}
    ports:
      - "${WEB_PORT}:80"
    volumes:
      - ${DB_VOLUME_LOCATION}:/var/lib/mysql
    depends_on:
      api:
        condition: service_started
